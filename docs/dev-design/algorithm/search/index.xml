<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>查找算法 on IWiki</title>
    <link>https://localhost:1313/docs/dev-design/algorithm/search/</link>
    <description>Recent content in 查找算法 on IWiki</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://localhost:1313/docs/dev-design/algorithm/search/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>二分查找</title>
      <link>https://localhost:1313/docs/dev-design/algorithm/search/binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://localhost:1313/docs/dev-design/algorithm/search/binary/</guid>
      <description>二分查找#条件# 要求待查找的序列有序  算法步骤# 每次取中间位置的值与待查值比较， 如果中间位置的值比待查值大，则在前半部分循环这个查找的过程， 如果中间位置的值比待查值小，则在后半部分循环这个查找的过程。 直到查找到了为止，否则序列中没有待查的关键字。  代码实现#public static int binarySearch(int[] array, int key) { int low = 0; int hight = array.length - 1; int mid; while (low &amp;lt;= hight) { // 中间位置  mid = (low + hight) / 2; if (array[mid] == key) { return mid + 1; } // 向右查找  else if (array[mid] &amp;lt; key) { low = mid + 1; } // 向左查找  else { hight = mid - 1; } } return -1; } </description>
    </item>
    
  </channel>
</rss>
